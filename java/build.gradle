/*
 * Copyright (C) 2020 National Institute of Informatics
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

allprojects {
    group = 'jp.ad.sinet.sinetstream'
    version '1.4.0'

    repositories {
        mavenCentral()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
            options.compilerArgs << "-g"
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    test {
        useJUnitPlatform()
    }

    test.finalizedBy jacocoTestReport

    jacoco {
        toolVersion = "0.8.4"
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: 'file:repository')
            }
        }
    }

    bintray {
        user = project.hasProperty('bintray_user') ? bintray_user : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintray_key') ? bintray_key : System.getenv('BINTRAY_API_KEY')
        publications = ['mavenJava']
        pkg {
            repo = 'maven'
            name = project.name
            licenses = ['Apache-2.0']
            websiteUrl = 'https://nii-gakunin-cloud.github.io/sinetstream/'
            vcsUrl = 'https://github.com/nii-gakunin-cloud/sinetstream.git'
            version {
                name = project.version
            }
        }
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                afterEvaluate {
                    artifactId = project.name
                }
                pom {
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/nii-gakunin-cloud/sinetstream.git'
                        url = 'https://github.com/nii-gakunin-cloud/sinetstream'
                    }
                }
            }
        }
    }
}
