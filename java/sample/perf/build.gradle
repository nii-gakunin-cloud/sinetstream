/*
 * Copyright (C) 2020 National Institute of Informatics
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "4.1.6"
}

sourceCompatibility = 1.11

version = '1.9.0-SNAPSHOT'

repositories {
    flatDir {
        dirs "libs"
    }
    mavenCentral()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

dependencies {
    implementation 'commons-cli:commons-cli:1.6.0'
    implementation 'net.sinetstream:SINETStream-api:[1.2,2.0)'
    runtimeOnly 'net.sinetstream:SINETStream-kafka:[1.2,2.0)'
    runtimeOnly 'net.sinetstream:SINETStream-mqtt:[1.2,2.0)'
    runtimeOnly 'org.slf4j:slf4j-nop:2.0.12'
    implementation group: 'org.jdeferred.v2', name: 'jdeferred-core', version: '2.0.+'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.+'
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.+'
    compileOnly "org.projectlombok:lombok:1.18.+"
}

application {
    mainClassName = 'jp.ad.sinet.stream.example.perf.SinetstreamBinaryProducer'
    applicationName = 'sinetstream-binary-producer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    applicationDefaultJvmArgs = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp2(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.SinetstreamBinaryConsumer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'sinetstream-binary-consumer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp3(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.KafkaBinaryProducer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'kafka-binary-producer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp4(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.KafkaBinaryConsumer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'kafka-binary-consumer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp5(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.MqttBinaryProducer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'mqtt-binary-producer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp6(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.MqttBinaryConsumer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'mqtt-binary-consumer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp7(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.SinetstreamBinaryAsyncProducer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'sinetstream-binary-async-producer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}

task createExtraRunApp8(type: CreateStartScripts) {
    mainClassName = 'jp.ad.sinet.stream.example.perf.SinetstreamBinaryAsyncConsumer'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
    applicationName = 'sinetstream-binary-async-consumer'

    // WORKAROUND for:
    //     WARNING: An illegal reflective access operation has occurred
    //     WARNING: Illegal reflective access by org.eclipse.paho.client.mqttv3.internal.FileLock
    // see https://github.com/eclipse/paho.mqtt.java/issues/507#issuecomment-814681499
    defaultJvmOpts = ['--add-opens=java.base/sun.nio.ch=ALL-UNNAMED']
}


applicationDistribution.into("bin") {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from(createExtraRunApp2)
    from(createExtraRunApp3)
    from(createExtraRunApp4)
    from(createExtraRunApp5)
    from(createExtraRunApp6)
    from(createExtraRunApp7)
    from(createExtraRunApp8)
    fileMode = 0755
}
