variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

stages:
  - build
  - test

test-api:
  stage: test
  image: python:3.7-slim
  script:
  - pip install .
  - python setup.py test
  artifacts:
    paths:
    - output/*
    - output/**/*
    when: always
    reports:
      junit:
      - output/junit-report.xml

test-image-type:
  stage: test
  image: python:3.7-slim
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends libgtk2.0-dev libgl1-mesa-dev
    - pip install .
    - cd plugins/value_type/image/
    - python setup.py test
  artifacts:
    paths:
      - plugins/value_type/image/output/*
      - plugins/value_type/image/output/**/*
    when: always
    reports:
      junit:
        - plugins/value_type/image/output/junit-report.xml

.test-plugin:
  stage: test
  image: python:3.7-slim
  services:
  - name: registry.vcp-handson.org/niidp/sinetstream-python:${PLUGIN_NAME}-broker
    alias: broker
    command: ["/usr/bin/env", "BROKER_HOSTNAME=broker", "/usr/local/bin/init.sh"]
  before_script:
  - apt-get update
  - apt-get install -y --no-install-recommends curl
  - mkdir -p certs
  - cd certs
  - curl -s -O http://broker:8080/cacert.pem
  - curl -s -O http://broker:8080/client0.key
  - curl -s -O http://broker:8080/client0.crt
  - curl -s -O http://broker:8080/bad-client.key
  - curl -s -O http://broker:8080/bad-client.crt
  - cd ..
  script:
  - pip install .
  - cd plugins/broker/$PLUGIN_NAME/
  - python setup.py test
  tags:
    - dind
  artifacts:
    paths:
    - plugins/broker/$PLUGIN_NAME/output/*
    - plugins/broker/$PLUGIN_NAME/output/**/*
    when: always
    reports:
      junit:
      - plugins/broker/$PLUGIN_NAME/output/junit-report.xml


test-kafka:
  extends: .test-plugin
  variables:
    PLUGIN_NAME: kafka
    KAFKA_SSL_BROKER: broker:9093
    KAFKA_SSL_BROKER_BAD_HOSTNAME: registry.vcp-handson.org-niidp-sinetstream-python:9093
    KAFKA_USER_PASSWD_BROKER: broker:9094
    KAFKA_USER: user01
    KAFKA_PASSWD: user01
    KAFKA_READ_USER: user02
    KAFKA_READ_PASSWD: user02
    KAFKA_WRITE_USER: user03
    KAFKA_WRITE_PASSWD: user03
    CACERT_PATH: "$CI_PROJECT_DIR/certs/cacert.pem"
    CLIENT_CERT_PATH: "$CI_PROJECT_DIR/certs/client0.crt"
    CLIENT_CERT_KEY_PATH: "$CI_PROJECT_DIR/certs/client0.key"
    CLIENT_BAD_CERT_PATH: "$CI_PROJECT_DIR/certs/bad-client.crt"
    CLIENT_BAD_CERT_KEY_PATH: "$CI_PROJECT_DIR/certs/bad-client.key"

test-mqtt:
  extends: .test-plugin
  variables:
    PLUGIN_NAME: mqtt
    MQTT_SSL_BROKER: broker:8883
    MQTT_USER_PASSWD_BROKER: broker:1884
    MQTT_SSL_CERT_AUTH_BROKER: broker:8885
    CACERT_PATH: "$CI_PROJECT_DIR/certs/cacert.pem"
    CLIENT_CERT_PATH: "$CI_PROJECT_DIR/certs/client0.crt"
    CLIENT_CERT_KEY_PATH: "$CI_PROJECT_DIR/certs/client0.key"
    CLIENT_BAD_CERT_PATH: "$CI_PROJECT_DIR/certs/bad-client.crt"
    CLIENT_BAD_CERT_KEY_PATH: "$CI_PROJECT_DIR/certs/bad-client.key"
    MQTT_USER: user01
    MQTT_PASSWD: user01
    MQTT_READ_USER: user02
    MQTT_READ_PASSWD: user02
    MQTT_WRITE_USER: user03
    MQTT_WRITE_PASSWD: user03
    MQTT_SSL_BROKER_BAD_HOSTNAME: registry.vcp-handson.org-niidp-sinetstream-python:8883
    MQTT_WS_BROKER: broker:80
    MQTT_WSS_BROKER: broker:443

build:
  stage: build
  image: python:3.7-slim
  script:
  - mkdir -p wheelhouse
  - python setup.py bdist_wheel
  - pip install dist/*
  - cp dist/* wheelhouse/
  - cd plugins/broker/kafka/
  - python setup.py bdist_wheel
  - pip install dist/*
  - cp dist/* ../../../wheelhouse/
  - cd ../mqtt
  - python setup.py bdist_wheel
  - pip install dist/*
  - cp dist/* ../../../wheelhouse/
  - cd ../../value_type/image
  - python setup.py bdist_wheel
  - pip install dist/*
  - cp dist/* ../../../wheelhouse/
  artifacts:
    paths:
    - wheelhouse/*.whl
    expire_in: 3 days


.build-image:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG $CONTEXT_DIR
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  tags:
    - dind

build-kafka-broker-image:
  extends: .build-image
  variables:
    CONTEXT_DIR: $CI_PROJECT_DIR/plugins/broker/kafka/tests/docker_kafka/container/broker
    IMAGE_TAG: kafka-broker
  only:
    changes:
      - plugins/broker/kafka/tests/docker_kafka/container/broker/*

build-mqtt-broker-image:
  extends: .build-image
  variables:
    CONTEXT_DIR: $CI_PROJECT_DIR/plugins/broker/mqtt/tests/docker_mqtt/container/broker
    IMAGE_TAG: mqtt-broker
  only:
    changes:
      - plugins/broker/mqtt/tests/docker_mqtt/container/broker/*
