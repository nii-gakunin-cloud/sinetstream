# vim:noexpandtab tabstop=8 shiftwidth=8

PYTHON3 = python3

all: lint

lint:
	tox -e lint || true

sdist:
	$(PYTHON3) -m build --sdist .

bdist_wheel:
	$(PYTHON3) -m build --wheel .

install:
	$(PYTHON3) -m pip install .

uninstall:
	$(PYTHON3) -m pip uninstall -y `$(PYTHON3) -c 'import toml; print(toml.load("pyproject.toml")["project"]["name"])'`

reinstall:
	$(MAKE) uninstall
	$(MAKE) install

clean::
	-rm -rf dist

test:
	cd ../../.. && make bdist_wheel-local
	cd tests/docker_* && docker compose build && docker compose down && docker compose up -d && docker compose logs -ft test
	../../../tests/rot broker.log
	../../../tests/rot test.log
	(cd tests/docker_* && docker compose logs --no-color broker) >broker.log
	(cd tests/docker_* && docker compose logs --no-color test) >test.log
	cd tests/docker_* && docker compose down

test-shell:
	cd ../../.. && make bdist_wheel-local
	cd tests/docker_* && sed '/command: bash\|tty: true/{s/^#/ /}' docker-compose.yml >docker-compose-shell.yml
	cd tests/docker_* && docker compose build && docker compose down && docker compose -f docker-compose-shell.yml up -d
	rm tests/docker_*/docker-compose-shell.yml
	sleep 3  # XXX wait for docker_*_test_1
	docker exec -it docker_$$(basename $$(pwd))-test-1 bash || true
	cd tests/docker_* && docker compose down
# example in test-shell:
#   tox
#   tox -e py38

tags::
	uctags -R --exclude=".*" --exclude="*.css" --exclude="*.js" src tests ../../../src $(HOME)/.local/lib

twine-upload::
	twine upload --verbose dist/*
