# Copyright (C) 2019 National Institute of Informatics
# 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[metadata]
name = sinetstream-mqtt
version = 1.1.0
description = MQTT plugin for SINETStream library
license = Apache License, Version 2.0
license_files =
    ../../../../LICENSE
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: Apache Software License
    Intended Audience :: Developers
    Natural Language :: Japanese
    Programming Language :: Python :: 3 :: Only
    Topic :: Software Development :: Libraries :: Python Modules

[options]
package_dir=
    =src
packages = find_namespace:
zip_safe = False
install_requires =
  sinetstream>=1.1.0
  paho-mqtt>=1.5
tests_require = 
  pytest
  pytest-cov
  pytest-pep8
  pytest-timeout
  pytest-html==2.0.1
setup_requires =
  pytest-runner
namespace_packages =
  sinetstreamplugin
python_requires = >= 3.6

[options.packages.find]
where = src

[aliases]
test = pytest

[tool:pytest]
addopts = --color=no --capture=no --pep8 --durations=0 --cov=sinetstreamplugin --cov-report term --cov-report=html:output/htmlcov --junitxml=output/junit-report.xml --html=output/report.html
timeout = 10
timeout_method = thread
testpaths =
  tests
  src
markers =
    pep8
pep8maxlinelength = 100
junit_family = xunit2

[options.entry_points]
sinetstream.reader =
    mqtt = sinetstreamplugin.mqtt:MqttReader
sinetstream.writer =
    mqtt = sinetstreamplugin.mqtt:MqttWriter
